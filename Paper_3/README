## Paper 3

Welcome! 

This folder contains the current work for Paper 3: 
- Risk of Major Bleeding with Ibrutinib in Patients with Thrombocytopenia â€“ a Retrospective Single-Center Canadian Study.

Note: the excel and csv files containing the data for the study are not included due to confidentiality reasons. 

In summary, this paper seeks to assess the possible risk factors of major bleeding in Chronic lymphocytic leukemia (CLL) patients, who are taking the drug: 
ibruntinib. This is relevant because ibruntinib itself may induce a higher risk of bleeeding. The complete motivation for this study can be read in the file: 
"Ibrutinib and bleeding REB protocol, Nov 15,2020 clean version.docx". 

A brief outline of the statistical analysis that was planned to be performed can be found in the methods file: "Methods_Ibrutinib_and_bleeding_AQ_June_22  - TD 
& MD Edits". During the process of analyzing the data, more ideas and considerations were implemented in the data analysis than is described in the methods 
file. The overall analysis that was conducted, and the results, is reflected in the results file: "Results_Ibrutinib_and_bleeding_AQ_Aug_2". The results file 
is the most complete summary of the work that was completed, and can be used as a guiding tool to explain why the code was written as it was. 

Firstly, a univariate analysis of the effect of the independent variables (can be read about further in the 'introduction' section of the results docx) on the 
dependent variables (bleeding outcome; Major, Minor, or None) was performed. 
- To analyze the categorical data via. contigency tables, the frequencies of the relevant categories needed to be computed. This was either achieved with the 
  sort and filter functionality in excel, or with the brief python script: "Bleeding_Study_FreqOfEvents_Python.ipynb". Then, using these frequencies the 
  contigency tables were computed with the R script: "Bleeding_study_Contigency_Tables_R.ipynb". 
- To analyze the continous data via. t-tests, anova tests, and post-hoc tukey tests, online calculators were used. 

Secondly, since regression models were implemented in the next steps (will be explained further, below this paragraph), analyzing any potential multi-collinearity
concerns between the independent variables was vital. I investigated relationships between the categorical variables with the script:
"Bleeding_study_Categorical_MulticollinearityCheck_R.ipynb", and I investigated relationships between the continous variables with the script: 
"Bleeding_study_Continous_MulticollinearityCheck_python.ipynb". 

For the multivariate analysis of the data, I decided to employ a logistic regression model. This was a suitable fit since the outcome data (dependent variable) 
is categorical, and more importantly because the logisitc regression model provides interpetable statistics, in that it's coefficients for the independent 
variables represent the log odds. Since a model with interpretable statistics was more important for this study than a model with better predictive power, the 
other non-parametric models (such as RFC, CART etc.) weren't investigated heavily. 

A binary logistic regression model was employed, with the script: "Bleeding_study_LogReg2_July4Data_Python.ipynb". Then, a ternary logistic regression model was
employed with the script: "Bleeding_study_LogReg3_July4Data_Python.ipynb". 

Nextly, three different survival analysis was performed on the data (i.e. 3 different event of interests). A python script was firstly employed on the raw 
dataset to clean it up: "Bleeding_study_CleanDataForSurvAnal_Python.ipynb". Then, the cleaned datasets were used to produce kaplan meier curves with the script: 
"Bleeding_study_KaplerMeier_R.ipynb". A univariate and multivariate cox regression analysis was also applied with the script: "Bleeding_study_MultiCox_R.ipynb". 

EXTRA (not included in results file):
As mentioned previously, a logistic regression model was chosen over other non-parametric models because it has more interpretable statistics, despite potentially
having worse prediciative capabilites. Nonetheless, I experimented with implementing a RFC (random forest classifier) model to the data. The script for this is: 
"Bleeding_study_RandFor_BinOutcome_July4Data_Python.ipynb". 

